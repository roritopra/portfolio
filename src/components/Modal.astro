---
export interface Props {
	title: string
	content: string
	linkg?: string
	linkb?: string
	linkp?: string
	tags: string[]
	id: string
	close: string
}

const { title, content, linkg, linkb, linkp, tags, id, close } = Astro.props
---

<div
	id={id}
	class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full"
>
	<div class="relative w-full max-w-md max-h-full">
		<!-- Modal content -->
		<div
			id="modalContent"
			class="relative bg-[#1B1D23] rounded-lg shadow dark:bg-gray-700"
		>
			<!-- Modal header -->
			<div
				class="flex items-center justify-between p-5 border-b rounded-t dark:border-gray-600"
			>
				<h3 class="text-2xl font-medium text-white dark:text-white">
					{title}
				</h3>
				<button
					id={close}
					type="button"
					class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
				>
					<svg
						class="w-3 h-3"
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 14 14"
					>
						<path
							stroke="currentColor"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
					</svg>
					<span class="sr-only">Close modal</span>
				</button>
			</div>
			<!-- Modal body -->
			<div class="p-6 space-y-6">
				<p
					class="text-base leading-relaxed text-gray-400"
					content?="display:"
					"none"
				>
					{content}
				</p>
			</div>

			<div class="flex items-center justify-between p-6">
				<div class="flex items-center gap-3 space-x-2">
					<a href={linkb} target="_blank"
						><svg
							width="30"
							height="30"
							viewBox="0 0 48 48"
							fill="none"
							xmlns="http://www.w3.org/2000/svg"
						>
							<path
								d="M15.5782 10.8069C16.659 10.7869 17.7383 10.8977 18.7925 11.1369C19.6801 11.3307 20.5228 11.6913 21.2758 12.1996C21.9712 12.7049 22.5215 13.3844 22.8714 14.1697C23.2734 15.1353 23.4674 16.1749 23.4406 17.2206C23.4863 18.3688 23.193 19.505 22.5975 20.4876C21.9709 21.4157 21.1048 22.157 20.0911 22.6327C21.4668 23.0036 22.665 23.8531 23.4703 25.0285C24.2434 26.274 24.632 27.7197 24.5874 29.1849C24.6129 30.3531 24.3713 31.5117 23.8812 32.5724C23.4281 33.4977 22.7647 34.3041 21.944 34.927C21.0992 35.5431 20.1484 35.9989 19.139 36.2718C18.0922 36.5614 17.0108 36.7068 15.9247 36.7041H4V10.8069H15.5782ZM14.8902 21.2813C15.7394 21.3163 16.5753 21.0621 17.2613 20.5602C17.5898 20.2678 17.8453 19.9026 18.0075 19.4937C18.1696 19.0849 18.2339 18.6438 18.1952 18.2057C18.2172 17.694 18.1153 17.1845 17.8982 16.7206C17.714 16.3513 17.4277 16.0426 17.0732 15.8313C16.7141 15.5986 16.3107 15.443 15.8884 15.3742C15.4303 15.2855 14.9641 15.2451 14.4975 15.2538H9.40219V21.3044H14.8902V21.2813ZM15.1872 32.3068C15.7007 32.3137 16.2132 32.2583 16.7135 32.1418C17.1706 32.0408 17.6041 31.8532 17.9906 31.589C18.3692 31.325 18.6751 30.9697 18.8799 30.5561C19.1175 30.0287 19.2266 29.4525 19.1984 28.8747C19.2499 28.3482 19.1802 27.8169 18.9945 27.3216C18.8089 26.8262 18.5123 26.3799 18.1275 26.0169C17.3119 25.4162 16.3124 25.1186 15.301 25.1754H9.40219V32.3068H15.1872Z"
								fill="white"></path>
							<path
								d="M32.2815 32.2111C32.7055 32.6041 33.205 32.9068 33.7496 33.1008C34.2942 33.2948 34.8725 33.3761 35.4495 33.3397C36.3642 33.3628 37.2612 33.0845 38.0021 32.5477C38.6049 32.1557 39.0614 31.5757 39.3007 30.8977H43.6089C43.1499 32.8279 42.0289 34.5362 40.4409 35.7256C38.9174 36.7368 37.1171 37.2489 35.2895 37.1909C33.9851 37.208 32.6906 36.9628 31.4829 36.4698C30.3903 36.0142 29.4105 35.3255 28.6118 34.4518C27.8161 33.5363 27.2049 32.4757 26.8116 31.3283C26.3702 30.0457 26.1542 28.6965 26.1731 27.3402C26.165 26.0067 26.3883 24.6819 26.8331 23.4247C27.4306 21.656 28.573 20.1221 30.0964 19.0431C31.6198 17.9641 33.4459 17.3953 35.3126 17.4186C36.6908 17.3898 38.0536 17.7123 39.2726 18.3558C40.3746 18.96 41.3252 19.8063 42.0529 20.8308C42.7974 21.9059 43.331 23.1125 43.6254 24.3866C43.9483 25.7548 44.0634 27.1637 43.967 28.5662H31.1347C31.0307 29.8838 31.4418 31.1904 32.2815 32.2111V32.2111ZM37.9114 22.3621C37.5523 22.0029 37.1204 21.7248 36.6448 21.5467C36.1692 21.3685 35.6609 21.2943 35.1542 21.3291C34.482 21.3035 33.8146 21.4525 33.217 21.7615C32.7433 22.0222 32.3252 22.3731 31.9861 22.7944C31.6856 23.1893 31.4618 23.637 31.3261 24.1144C31.2039 24.5125 31.1275 24.9233 31.0984 25.3387H39.0466C38.9773 24.2557 38.5828 23.2188 37.9147 22.3637L37.9114 22.3621Z"
								fill="white"></path>
							<path
								d="M40.0333 12.5361H30.0737V15.0821H40.0333V12.5361Z"
								fill="white"></path>
						</svg>
					</a>
					{
						linkg && (
							<a href={linkg} target="_blank">
								<svg
									width="30"
									height="30"
									viewBox="0 0 48 48"
									fill="none"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										clip-rule="evenodd"
										d="M24 4.49338C12.95 4.49338 4 13.4434 4 24.4934C4 33.3434 9.725 40.8184 17.675 43.4684C18.675 43.6434 19.05 43.0434 19.05 42.5184C19.05 42.0434 19.025 40.4684 19.025 38.7934C14 39.7184 12.7 37.5684 12.3 36.4434C12.075 35.8684 11.1 34.0934 10.25 33.6184C9.55 33.2434 8.55 32.3184 10.225 32.2934C11.8 32.2684 12.925 33.7434 13.3 34.3434C15.1 37.3684 17.975 36.5184 19.125 35.9934C19.3 34.6934 19.825 33.8184 20.4 33.3184C15.95 32.8184 11.3 31.0934 11.3 23.4434C11.3 21.2684 12.075 19.4684 13.35 18.0684C13.15 17.5684 12.45 15.5184 13.55 12.7684C13.55 12.7684 15.225 12.2434 19.05 14.8184C20.65 14.3684 22.35 14.1434 24.05 14.1434C25.75 14.1434 27.45 14.3684 29.05 14.8184C32.875 12.2184 34.55 12.7684 34.55 12.7684C35.65 15.5184 34.95 17.5684 34.75 18.0684C36.025 19.4684 36.8 21.2434 36.8 23.4434C36.8 31.1184 32.125 32.8184 27.675 33.3184C28.4 33.9434 29.025 35.1434 29.025 37.0184C29.025 39.6934 29 41.8434 29 42.5184C29 43.0434 29.375 43.6684 30.375 43.4684C34.3454 42.128 37.7954 39.5763 40.2396 36.1724C42.6838 32.7685 43.9989 28.6839 44 24.4934C44 13.4434 35.05 4.49338 24 4.49338Z"
										fill="white"
									/>
								</svg>
							</a>
						)
					}
				</div>
				<div class="flex items-center">
					{
						linkp && (
							<a href={linkp} target="_blank">
								<svg
									width="20"
									height="20"
									viewBox="0 0 836 809"
									fill="none"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										d="M363 89H53C48.5817 89 45 92.5817 45 97V755.5C45 759.918 48.5817 763.5 53 763.5H714C718.418 763.5 722 759.918 722 755.5V443"
										stroke="white"
										stroke-width="90"
										stroke-linecap="round"
									/>
									<path
										d="M247.5 588.5L791 45M791 45V323.5M791 45H504"
										stroke="white"
										stroke-width="90"
										stroke-linecap="round"
									/>
								</svg>
							</a>
						)
					}
				</div>
			</div>
			<!-- Modal footer -->
			<!-- If Tag -->
			{
				tags ? (
					<div class="flex items-center flex-wrap px-6 pb-5 gap-3 border-t border-gray-200 rounded-b dark:border-gray-600 pt-5">
						{tags.map((tag) => (
							<p class="gap-3 text-sm text-white px-3 py-1 bg-gray-600 rounded-md">
								{tag}
							</p>
						))}
					</div>
				) : null
			}
		</div>
	</div>
</div>

<script>
	/* --------- Modal1 astra -------- */
	document.addEventListener('astro:page-load', function () {
		const openModalBtn = document.getElementById('openModalBtn')
		const closeModalBtn = document.getElementById('closeModalBtn')
		const modalContainer = document.getElementById('modalContainer')

		openModalBtn.addEventListener('click', () => {
			modalContainer.style.display = 'flex'
		})

		function closeModal() {
			modalContainer.style.display = 'none'
		}

		closeModalBtn.addEventListener('click', closeModal)
		modalContainer.addEventListener('click', (event) => {
			if (event.target === modalContainer) {
				closeModal()
			}
		})

		/* --------- Modal2 starbucks -------- */

		const openModalBtn2 = document.getElementById('openModalBtn2')
		const modalContainer2 = document.getElementById('modalContainer2')
		const closeModalBtn2 = document.getElementById('closeModalBtn2')

		openModalBtn2.addEventListener('click', () => {
			modalContainer2.style.display = 'flex'
		})

		function closeModal2() {
			modalContainer2.style.display = 'none'
		}

		closeModalBtn2.addEventListener('click', closeModal2)
		modalContainer2.addEventListener('click', (event) => {
			if (event.target === modalContainer2) {
				closeModal2()
			}
		})

		/* --------- Modal3 h&m -------- */

		const openModalBtn3 = document.getElementById('openModalBtn3')
		const modalContainer3 = document.getElementById('modalContainer3')
		const closeModalBtn3 = document.getElementById('closeModalBtn3')

		openModalBtn3.addEventListener('click', () => {
			modalContainer3.style.display = 'flex'
		})

		function closeModal3() {
			modalContainer3.style.display = 'none'
		}

		closeModalBtn3.addEventListener('click', closeModal3)
		modalContainer3.addEventListener('click', (event) => {
			if (event.target === modalContainer3) {
				closeModal3()
			}
		})

		/* --------- Modal4 bancow -------- */

		const openModalBtn4 = document.getElementById('openModalBtn4')
		const modalContainer4 = document.getElementById('modalContainer4')
		const closeModalBtn4 = document.getElementById('closeModalBtn4')

		openModalBtn4.addEventListener('click', () => {
			modalContainer4.style.display = 'flex'
		})

		function closeModal4() {
			modalContainer4.style.display = 'none'
		}

		closeModalBtn4.addEventListener('click', closeModal4)
		modalContainer4.addEventListener('click', (event) => {
			if (event.target === modalContainer4) {
				closeModal4()
			}
		})

		/* --------- Modal5 bitx -------- */

		const openModalBtn5 = document.getElementById('openModalBtn5')
		const modalContainer5 = document.getElementById('modalContainer5')
		const closeModalBtn5 = document.getElementById('closeModalBtn5')

		openModalBtn5.addEventListener('click', () => {
			modalContainer5.style.display = 'flex'
		})

		function closeModal5() {
			modalContainer5.style.display = 'none'
		}

		closeModalBtn5.addEventListener('click', closeModal5)
		modalContainer5.addEventListener('click', (event) => {
			if (event.target === modalContainer5) {
				closeModal5()
			}
		})


		/* --------- Modal6 Innlab -------- */

		const openModalBtn6 = document.getElementById('openModalBtn6')
		const modalContainer6 = document.getElementById('modalContainer6')
		const closeModalBtn6 = document.getElementById('closeModalBtn6')

		openModalBtn6.addEventListener('click', () => {
			modalContainer6.style.display = 'flex'
		})

		function closeModal6() {
			modalContainer6.style.display = 'none'
		}

		closeModalBtn6.addEventListener('click', closeModal6)
		modalContainer6.addEventListener('click', (event) => {
			if (event.target === modalContainer6) {
				closeModal6()
			}
		})
	})
</script>

<style>
	#modalContainer,
	#modalContainer2,
	#modalContainer3,
	#modalContainer4,
	#modalContainer5,
	#modalContainer6 {
		z-index: 10000;
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.74); /* Fondo transparente */
		display: flex;
		justify-content: center;
		align-items: center;
		display: none; /* Inicialmente oculto */
	}
</style>
