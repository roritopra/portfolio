---
interface Props {
	title: string
}

const { title } = Astro.props

import MenuLanding from '../components/MenuLanding.astro';
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/Capa 9.svg" />
		<meta name="generator" content={Astro.generator} />
		<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet" />
		<style is:global>
			@font-face {
			font-family: 'Roobert regular';
			src: url('/fonts/Roobert-Regular.otf') format('otf');
			font-weight: normal;
			font-style: normal;
			font-display: swap;
			}
		</style>
		<title>{title}</title>
		<style>
			body {
				cursor: none;
			}

			.cursor-dot {
				width: 5px;
				height: 5px;
				background: #fff;
			}

			.cursor-outline {
				width: 30px;
				height: 30px;
				border: 2px solid hsl(0, 0%, 100%, 0.5);
			}

			.cursor-dot,
			.cursor-outline {
				position: fixed;
				top: 0;
				left: 0;
				pointer-events: none;
				transform: translate(-50%, -50%);
				border-radius: 50%;
				z-index: 9999;
			}

			@media only screen and (max-width: 1280px) {
				.cursor-dot,
				.cursor-outline {
					display: none;
				}

				body {
					cursor: default;
				}
			}
		</style>
	</head>
	<body>
		<div class="cursor-dot"></div>
		<div class="cursor-outline"></div>
		<main
		class="bg-[#0C1014] snap-y snap-mandatory relative z-30 w-full h-screen overflow-y-auto overflow-x-hidden scroll-smooth"
		>
			<MenuLanding />
			<div class="noise bg-noise"></div>
			<slot />
		</main>
		<script
			is:inline
			src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"
		></script>
		<script is:inline src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
		<script is:inline>
			AOS.init()
		</script>
		<script>
			const cursorDot = document.querySelector('.cursor-dot') as HTMLElement
			const cursorOutline = document.querySelector('.cursor-outline')

			function changeCursorColorOnHover(event) {
				const isLink = event.target.tagName.toLowerCase() === 'a'
				const isImg = event.target.tagName.toLowerCase() === 'img'

				if (isLink || isImg) {
					cursorDot.style.background = '#00EBA6'
					cursorOutline.style.borderColor = '#00EBA6'
					cursorOutline.style.background = 'rgba(0, 235, 166, 0.50)'
				} else {
					cursorDot.style.background = '#fff'
					cursorOutline.style.borderColor = 'hsl(0, 0%, 100%, 0.5)'
					cursorOutline.style.background = 'rgba(0, 235, 166, 0.00)'
				}
			}

			window.addEventListener('mousemove', function (e) {
				const posX = e.clientX
				const posY = e.clientY

				cursorDot.style.left = `${posX}px`
				cursorDot.style.top = `${posY}px`

				cursorOutline.animate(
					{
						left: `${posX}px`,
						top: `${posY}px`,
					},
					{
						duration: 500,
						easing: 'ease-out',
						fill: 'forwards',
					}
				)
			})

			document.addEventListener('mouseover', changeCursorColorOnHover)
			document.addEventListener('mouseout', () => {
				cursorDot.style.background = '#fff'
				cursorOutline.style.borderColor = 'hsl(0, 0%, 100%, 0.5)'
			})
		</script>
	</body>
</html>

<style>
	.noise {
		pointer-events: none;
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100vh;
		content: '';
		opacity: 0.02;
		z-index: 1000;
		pointer-events: none;
		background-image: url(/noise.gif);
	}
</style>